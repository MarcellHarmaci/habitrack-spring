openapi: 3.0.3
info:
  title: HabiTrack API definition - OpenAPI 3.0
  description: |-
    This is HabiTrack API definition based on the OpenAPI 3.0 specification.
    
    Some useful links:
    - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
    - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  contact:
    email: harmaci.marci@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
  - url: https://habitrack.harmaci.com/api
tags:
  - name: habit
    description: Operations about habits
  - name: user
    description: Operations about user
paths:
  /habits:
    get:
      tags:
        - habit
      summary: Read all saved habits
      operationId: getHabits
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Habit'
  /habit:
    post:
      tags:
        - habit
      summary: Create a new habit
      operationId: addHabit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HabitData'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Habit'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
    put:
      tags:
        - habit
      summary: Update a habit
      description: ''
      operationId: updateHabitById
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Habit'
        required: true
      responses:
        '400':
          description: Invalid input
        '404':
          description: No habit found with given id
  /habit/{id}:
    get:
      tags:
        - habit
      summary: Read habit by id
      description: Returns a single habit
      operationId: getHabitById
      parameters:
        - name: id
          in: path
          description: ID of habit to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Habit'
        '400':
          description: Invalid ID supplied
        '404':
          description: Habit not found
    delete:
      tags:
        - habit
      summary: Delete a habit by id
      operationId: deleteHabitById
      parameters:
        - name: id
          in: path
          description: Habit id to delete
          required: true
          schema:
            type: integer
      responses:
        '404':
          description: No habit found with given id
        '405':
          description: The requested habit is already deleted

  /user/login:
    get:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: false
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Invalid username/password supplied
  /user/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      parameters: []
      responses:
        default:
          description: successful operation
components:
  schemas:
    HabitData:
      description: A habit's data without an id
      required:
        - name
      type: object
      properties:
        name:
          type: string
          example: "Read one chapter"
    Habit:
      type: object
      required:
        - name
      properties:
        id:
          type: integer
          format: int64
          example: 123
        name:
          type: string
          example: "Read one chapter"
  requestBodies:
    Habit:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HabitData'
    